<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Dr. Michael Lesniak -- Turning Code Into Business Value</title>
    <link>https://example.com/articles/</link>
    <description>Recent content on Dr. Michael Lesniak -- Turning Code Into Business Value</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>mail@mlesniak.com (Dr. Michael Lesniak)</managingEditor>
    <webMaster>mail@mlesniak.com (Dr. Michael Lesniak)</webMaster>
    <lastBuildDate>Fri, 03 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://example.com/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>You could have invented it yourself: Dependency Injection</title>
      <link>https://example.com/articles/di/</link>
      <pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><author>mail@mlesniak.com (Dr. Michael Lesniak)</author>
      <guid>https://example.com/articles/di/</guid>
      <description>&lt;h2 id=&#34;why-do-we-need-dependency-injection&#34;&gt;Why do we need Dependency Injection?&lt;/h2&gt;
&lt;p&gt;Dependency Injection (DI) addresses a simple but critical problem: keeping your
code manageable. Without it, you’re stuck with tightly coupled components, like
a Car class that directly creates its own Engine.&lt;/p&gt;
&lt;p&gt;Initially, this seems fine. But what happens when you need different engines,
gas, electric, or something new? Suddenly, your Car class has to handle creation
logic, breaking its focus and making changes a nightmare.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="why-do-we-need-dependency-injection">Why do we need Dependency Injection?</h2>
<p>Dependency Injection (DI) addresses a simple but critical problem: keeping your
code manageable. Without it, you’re stuck with tightly coupled components, like
a Car class that directly creates its own Engine.</p>
<p>Initially, this seems fine. But what happens when you need different engines,
gas, electric, or something new? Suddenly, your Car class has to handle creation
logic, breaking its focus and making changes a nightmare.</p>
<p>DI changes the approach. Instead of creating its own dependencies, the Car
gets its
Engine from the outside. This keeps your code focused, flexible, and easy to
test. Swap an engine? Update a configuration? No problem.</p>
<p>You don’t need a fancy framework to do DI. But frameworks like Spring automate
the wiring, saving time. The payoff? Cleaner code, fewer headaches, and a
codebase that doesn’t fight you every time something changes.</p>
<p>From the outside, it might seem like magic. Here&rsquo;s how you can implement it yourself.</p>
<h2 id="the-canonical-spring-example">The canonical Spring example</h2>
<p>The simplest example consists of a (Spring) component <code>MessageConsumer</code> which
depends on another (Spring) component <code>MessageProvider</code>, which in turn does not
have any further dependencies. When starting the application, the <code>run</code>
method from the consumer is called since it implements <code>CommandLineRunner</code>:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#999;font-style:italic">// Main.java</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">org.springframework.boot.SpringApplication</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">org.springframework.boot.autoconfigure.SpringBootApplication</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666"></span><span style="color:#ffa500">@SpringBootApplication</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">Main</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">main</span>(String...<span style="color:#666"> </span>args)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">        </span>SpringApplication.<span style="color:#bbb">run</span>(Main.<span style="color:#bbb">class</span>,<span style="color:#666"> </span>args);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">// MessageConsumer.java</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">org.springframework.boot.CommandLineRunner</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">org.springframework.stereotype.Component</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666"></span><span style="color:#ffa500">@Component</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">MessageConsumer</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">implements</span><span style="color:#666"> </span>CommandLineRunner<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>MessageProvider<span style="color:#666"> </span>messageProvider;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#447fcf">MessageConsumer</span>(MessageProvider<span style="color:#666"> </span>messageProvider)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">this</span>.<span style="color:#bbb">messageProvider</span><span style="color:#666"> </span>=<span style="color:#666"> </span>messageProvider;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">    </span><span style="color:#ffa500">@Override</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">run</span>(String...<span style="color:#666"> </span>args)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">        </span>String<span style="color:#666"> </span>message<span style="color:#666"> </span>=<span style="color:#666"> </span>messageProvider.<span style="color:#bbb">getMessage</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">        </span>System.<span style="color:#bbb">out</span>.<span style="color:#bbb">println</span>(message);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">32</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">33</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">// MessageProvider.java</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">34</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">org.springframework.stereotype.Component</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">35</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">36</span><span><span style="color:#666"></span><span style="color:#ffa500">@Component</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">37</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">MessageProvider</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">38</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span>String<span style="color:#666"> </span><span style="color:#447fcf">getMessage</span>()<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">39</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#ed9d13">&#34;Hello, world&#34;</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">40</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">41</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<p>In the following sections, we will implement our own dependency injection
framework. Our goal is to allow seamless switching of import statements to our implementation without any other changes.
The example should still function as expected.</p>
<p>Our goal:
<img src="https://mlesniak.com/articles/di.png" /></p>
<h2 id="our-own-implementation">Our own implementation</h2>
<p>Spring&rsquo;s DI framework offers extensive functionality, much of which is beyond the scope of this educational example.
Let’s begin by clarifying what we won’t implement, though much of it is
straightforward:</p>
<ul>
<li>Lifecycle Management. No support for <code>@PostConstruct</code>, <code>@PreDestroy</code>, &hellip;</li>
<li>Scope Management. We only support singletons. Adding additional types such
as Request, Prototype, Session would be possible by adding a dedicated
<code>ApplicationContext</code> and appropriate methods. Since we do not support
<code>@Controller</code> in our small example, these do not make sense anyway.</li>
<li>No Aspect-oriented programming (AOP). This might be a bit more tricky and
will probably be covered in a future post.</li>
<li>No field or method injection. Technically, trivial to implement, but would
just blow up the code without providing additional insights.</li>
</ul>
<p>&hellip; and, as always, we implement minimal error and edge case handling &ndash;
definitely not production-ready. ;-)</p>
<p>Having said all that, let&rsquo;s start with modifications to our <code>Main</code> class.
Since the name <code>SpringApplication</code> is already reserved, and summer follows on
spring, let&rsquo;s call it &hellip; <code>SummerApplication</code>:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1</span><span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot.SummerApplication</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">3</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">Main</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">4</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">main</span>(String...<span style="color:#666"> </span>args)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">5</span><span><span style="color:#666">        </span>SummerApplication.<span style="color:#bbb">run</span>(Main.<span style="color:#bbb">class</span>,<span style="color:#666"> </span>args);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">6</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">7</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<p>The remaining files stay the same, though, as promised, we change the imports:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#999;font-style:italic">// MessageProvider.java</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot.Component</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666"></span><span style="color:#ffa500">@Component</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">MessageProvider</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span>String<span style="color:#666"> </span><span style="color:#447fcf">getMessage</span>()<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#ed9d13">&#34;Hello, world&#34;</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">// MessageConsumer.java</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot.CommandLineRunner</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot.Component</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666"></span><span style="color:#ffa500">@Component</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">MessageConsumer</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">implements</span><span style="color:#666"> </span>CommandLineRunner<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>MessageProvider<span style="color:#666"> </span>messageProvider;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#447fcf">MessageConsumer</span>(MessageProvider<span style="color:#666"> </span>messageProvider)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">this</span>.<span style="color:#bbb">messageProvider</span><span style="color:#666"> </span>=<span style="color:#666"> </span>messageProvider;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">  </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">  </span><span style="color:#ffa500">@Override</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">run</span>(String...<span style="color:#666"> </span>args)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">    </span>String<span style="color:#666"> </span>message<span style="color:#666"> </span>=<span style="color:#666"> </span>messageProvider.<span style="color:#bbb">getMessage</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">    </span>System.<span style="color:#bbb">out</span>.<span style="color:#bbb">println</span>(message);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">  </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<h3 id="marking-things">Marking things&hellip;</h3>
<p>Since we do not use Controllers but still want an entrypoint, let&rsquo;s define our
own marker interface:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1</span><span><span style="color:#6ab825;font-weight:bold">package</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">3</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// Marker interface to determine where our application</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">4</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// starts since we do not have typical controllers</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">5</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// waiting for HTTP requests.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">6</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">interface</span> <span style="color:#447fcf;text-decoration:underline">CommandLineRunner</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">7</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">run</span>(String...<span style="color:#666"> </span>args);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">8</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<p>We also want to annotate service classes with our own Component annotation</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#6ab825;font-weight:bold">package</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.lang.annotation.ElementType</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.lang.annotation.Retention</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.lang.annotation.RetentionPolicy</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.lang.annotation.Target</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">///</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// Marker interface to determine components of our application.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">///</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// For every class marked as a component, we try to resolve all</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// dependencies in its constructor.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666"></span><span style="color:#ffa500">@Retention</span>(RetentionPolicy.<span style="color:#bbb">RUNTIME</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666"></span><span style="color:#ffa500">@Target</span>(ElementType.<span style="color:#bbb">TYPE</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#ffa500">@interface</span><span style="color:#666"> </span>Component<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<h3 id="the-interesting-part">The interesting part</h3>
<p>The actual magic is implemented in the following 140 lines of code. We walk
through them step by step.</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#6ab825;font-weight:bold">package</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.boot</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">com.mlesniak.Main</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.io.IOException</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.lang.reflect.InvocationTargetException</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.net.URI</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.net.URISyntaxException</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.nio.file.*</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.util.*</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">import</span><span style="color:#666"> </span><span style="color:#447fcf;text-decoration:underline">java.util.stream.Collectors</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666"></span><span style="color:#999;font-style:italic">/// Core dependency injection resolution.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">SummerApplication</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">// ... to be filled out in this section ...</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<p>Our sole public method is <code>run</code>, which serves to purposes:</p>
<ol>
<li>Create all necessary singletons</li>
<li>Figure out the component implementing <code>CommandLineRunner</code> and start them.</li>
</ol>
<p>Therefore, the code is straightforward:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// Entry point into dependency injection.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">///</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// @param mainClass The main class of the application, ideally placed at the root package.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// @param args      Command line args.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">run</span>(Class&lt;Main&gt;<span style="color:#666"> </span>mainClass,<span style="color:#666"> </span>String[]<span style="color:#666"> </span>args)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">      </span>List&lt;Class&lt;?&gt;&gt;<span style="color:#666"> </span>components<span style="color:#666"> </span>=<span style="color:#666"> </span>getComponents(mainClass);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// For our example, we support only singletons.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">      </span>Map&lt;Class&lt;?&gt;,<span style="color:#666"> </span>Object&gt;<span style="color:#666"> </span>instances<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>HashMap&lt;&gt;();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">      </span>components.<span style="color:#bbb">forEach</span>(component<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>createSingleton(instances,<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>HashSet&lt;&gt;(),<span style="color:#666"> </span>component));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// Find entry point by looking for the class implementing CommandLineRunner. </span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>entryClasses<span style="color:#666"> </span>=<span style="color:#666"> </span>instances<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">              </span>.<span style="color:#bbb">keySet</span>().<span style="color:#bbb">stream</span>()<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">              </span>.<span style="color:#bbb">filter</span>(SummerApplication::hasCommandLineRunnerInterface)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">              </span>.<span style="color:#bbb">toList</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">if</span><span style="color:#666"> </span>(entryClasses.<span style="color:#bbb">isEmpty</span>())<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">throw</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>IllegalStateException(<span style="color:#ed9d13">&#34;No entry point defined via CommandLineRunner&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">if</span><span style="color:#666"> </span>(entryClasses.<span style="color:#bbb">size</span>()<span style="color:#666"> </span>&gt;<span style="color:#666"> </span>1)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">throw</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>IllegalStateException(<span style="color:#ed9d13">&#34;Ambiguous entry points defined via CommandLineRunner&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>entryClass<span style="color:#666"> </span>=<span style="color:#666"> </span>entryClasses.<span style="color:#bbb">getFirst</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">      </span>((CommandLineRunner)<span style="color:#666"> </span>instances.<span style="color:#bbb">get</span>(entryClass)).<span style="color:#bbb">run</span>(args);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">  </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">boolean</span><span style="color:#666"> </span><span style="color:#447fcf">hasCommandLineRunnerInterface</span>(Class&lt;?&gt;<span style="color:#666"> </span>clazz)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>Arrays.<span style="color:#bbb">stream</span>(clazz.<span style="color:#bbb">getInterfaces</span>())<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666">            </span>.<span style="color:#bbb">anyMatch</span>(i<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>i<span style="color:#666"> </span>==<span style="color:#666"> </span>CommandLineRunner.<span style="color:#bbb">class</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">  </span>}</span></span></code></pre></div>
<p>A key function is <code>getComponents</code>. We need to collect all classes annotated
with our custom component annotation on the classpath:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// Get a list of all components based on the passed package of the class.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">///</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// @param mainClass the root class to start scanning.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span>List&lt;Class&lt;?&gt;&gt;<span style="color:#666"> </span>getComponents(Class&lt;Main&gt;<span style="color:#666"> </span>mainClass)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>findAllClassesInPackage(mainClass.<span style="color:#bbb">getPackageName</span>()).<span style="color:#bbb">stream</span>()<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">filter</span>(c<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>c.<span style="color:#bbb">getAnnotation</span>(Component.<span style="color:#bbb">class</span>)<span style="color:#666"> </span>!=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">null</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">collect</span>(Collectors.<span style="color:#bbb">toList</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">      </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(IOException<span style="color:#666"> </span>|<span style="color:#666"> </span>URISyntaxException<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">throw</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>IllegalStateException(<span style="color:#ed9d13">&#34;Error retrieving components, starting at &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>mainClass.<span style="color:#bbb">getSimpleName</span>(),<span style="color:#666"> </span>e);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">  </span>}</span></span></code></pre></div>
<p>This is slightly complicated since we can either run our application with an unpacked
classpath, e.g. on the command line or via an IDE, or as a packed (fat) .
jar-file.</p>
<p>Thanks to the abstraction provided by <code>java.nio</code>, this can be handled quite
elegantly:</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// Retrieve a list of all classes in a package (or its children). This method supports both unpacked</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// (target/classes) and packed (.jar) class containers.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span>Set&lt;Class&lt;?&gt;&gt;<span style="color:#666"> </span>findAllClassesInPackage(String<span style="color:#666"> </span>packageName)<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">throws</span><span style="color:#666"> </span>IOException,<span style="color:#666"> </span>URISyntaxException<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">      </span>String<span style="color:#666"> </span>path<span style="color:#666"> </span>=<span style="color:#666"> </span>packageName.<span style="color:#bbb">replace</span>(<span style="color:#ed9d13">&#39;.&#39;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#39;/&#39;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">      </span>URI<span style="color:#666"> </span>uri<span style="color:#666"> </span>=<span style="color:#666"> </span>SummerApplication.<span style="color:#bbb">class</span>.<span style="color:#bbb">getResource</span>(<span style="color:#ed9d13">&#34;/&#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>path).<span style="color:#bbb">toURI</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">if</span><span style="color:#666"> </span>(uri.<span style="color:#bbb">getScheme</span>().<span style="color:#bbb">equals</span>(<span style="color:#ed9d13">&#34;jar&#34;</span>))<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">          </span><span style="color:#999;font-style:italic">// We have to create a &#34;virtual&#34; filesystem to access the class files stored in the</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">          </span><span style="color:#999;font-style:italic">// .jar file.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>(FileSystem<span style="color:#666"> </span>fileSystem<span style="color:#666"> </span>=<span style="color:#666"> </span>FileSystems.<span style="color:#bbb">newFileSystem</span>(uri,<span style="color:#666"> </span>Collections.<span style="color:#bbb">emptyMap</span>()))<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">              </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>findClassesInPath(fileSystem.<span style="color:#bbb">getPath</span>(path),<span style="color:#666"> </span>packageName);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">          </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// We&#39;re running the injection code from an unpacked archive and can directly access the .class files.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>findClassesInPath(Paths.<span style="color:#bbb">get</span>(uri),<span style="color:#666"> </span>packageName);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">  </span>}</span></span></code></pre></div>
<p>Therefore, when looking for classes in <code>findClassesInPath</code>, we do not care
if we walk through the archived files of the .jar or are actually looking on
real files on our filesystem. Retrieving the actual class definitions
consists now of just</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// Iterate through all .class files in the given path for the given package.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span>Set&lt;Class&lt;?&gt;&gt;<span style="color:#666"> </span>findClassesInPath(Path<span style="color:#666"> </span>path,<span style="color:#666"> </span>String<span style="color:#666"> </span>packageName)<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">throws</span><span style="color:#666"> </span>IOException<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>(<span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>walk<span style="color:#666"> </span>=<span style="color:#666"> </span>Files.<span style="color:#bbb">walk</span>(path,<span style="color:#666"> </span>1))<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>walk<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">filter</span>(p<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>!Files.<span style="color:#bbb">isDirectory</span>(p))<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">filter</span>(p<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>p.<span style="color:#bbb">toString</span>().<span style="color:#bbb">endsWith</span>(<span style="color:#ed9d13">&#34;.class&#34;</span>))<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">map</span>(p<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>getClass(p,<span style="color:#666"> </span>packageName))<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">filter</span>(Objects::nonNull)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">                  </span>.<span style="color:#bbb">collect</span>(Collectors.<span style="color:#bbb">toSet</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">  </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// Retrieve a class based on the path and package name.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span>Class&lt;?&gt;<span style="color:#666"> </span>getClass(Path<span style="color:#666"> </span>classPath,<span style="color:#666"> </span>String<span style="color:#666"> </span>packageName)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">          </span>String<span style="color:#666"> </span>className<span style="color:#666"> </span>=<span style="color:#666"> </span>packageName<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;.&#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>classPath.<span style="color:#bbb">getFileName</span>().<span style="color:#bbb">toString</span>().<span style="color:#bbb">replace</span>(<span style="color:#ed9d13">&#34;.class&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>Class.<span style="color:#bbb">forName</span>(className);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666">      </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(ClassNotFoundException<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">null</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">  </span>}</span></span></code></pre></div>
<p>I know that we do not recursively descend into subdirectories &ndash; good enough
for the example ;-).</p>
<p>Once we have a list of class definitions, we can finally instantiate them
and call component constructors with the instantiated classes. The dependency
resolution and object instantiation happens in
<code>createSingleton</code>. To simplify our implementation, we have a very basic
dependency resolution. This function is called recursively for all constructor
arguments to find singleton instances. If they are not yet available, we try
to construct them while resolving their dependencies as well. To keep track
of cycles, we keep track of already visited classes.</p>
<p>This could of course be done more clever for the price of blowing up the
number of lines of  code, hence, good enough for this demonstration.</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// Creates a new instance for the passed class using its constructor.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">///</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666">  </span><span style="color:#999;font-style:italic">/// We resolve all dependent constructor parameters.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">createSingleton</span>(Map&lt;Class&lt;?&gt;,<span style="color:#666"> </span>Object&gt;<span style="color:#666"> </span>singletons,<span style="color:#666"> </span>Set&lt;Class&lt;?&gt;&gt;<span style="color:#666"> </span>visited,<span style="color:#666"> </span>Class&lt;?&gt;<span style="color:#666"> </span>clazz)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// Cycle detection. We&#39;ve been called to resolve a parameter dependency, but already tried to resolve the</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// dependencies for this class. When trying to resolve clazz&#39; dependencies, we will run into an infinite cycle.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">if</span><span style="color:#666"> </span>(!visited.<span style="color:#bbb">add</span>(clazz))<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>names<span style="color:#666"> </span>=<span style="color:#666"> </span>visited.<span style="color:#bbb">stream</span>().<span style="color:#bbb">map</span>(Class::getSimpleName).<span style="color:#bbb">collect</span>(Collectors.<span style="color:#bbb">joining</span>(<span style="color:#ed9d13">&#34;, &#34;</span>));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">throw</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>IllegalStateException(<span style="color:#ed9d13">&#34;Cycle detected. Visited classes=&#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>names);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>cs<span style="color:#666"> </span>=<span style="color:#666"> </span>clazz.<span style="color:#bbb">getDeclaredConstructors</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">if</span><span style="color:#666"> </span>(cs.<span style="color:#bbb">length</span><span style="color:#666"> </span>&gt;<span style="color:#666"> </span>1)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">throw</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>IllegalArgumentException(<span style="color:#ed9d13">&#34;No unique constructor found for &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>clazz.<span style="color:#bbb">getSimpleName</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>constructor<span style="color:#666"> </span>=<span style="color:#666"> </span>cs[0];<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>expectedInjections<span style="color:#666"> </span>=<span style="color:#666"> </span>constructor.<span style="color:#bbb">getParameterTypes</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// For every dependent dependency, generate a new instance. Note that we implicitly handle the case for</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// parameter-less constructors here as well.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">      </span>Arrays.<span style="color:#bbb">stream</span>(expectedInjections).<span style="color:#bbb">forEach</span>(depClass<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">          </span>createSingleton(singletons,<span style="color:#666"> </span>visited,<span style="color:#666"> </span>depClass);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">      </span>});<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>params<span style="color:#666"> </span>=<span style="color:#666"> </span>Arrays.<span style="color:#bbb">stream</span>(expectedInjections).<span style="color:#bbb">map</span>(singletons::get).<span style="color:#bbb">toArray</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">          </span>singletons.<span style="color:#bbb">put</span>(clazz,<span style="color:#666"> </span>constructor.<span style="color:#bbb">newInstance</span>(params));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">      </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(InstantiationException<span style="color:#666"> </span>|<span style="color:#666"> </span>IllegalAccessException<span style="color:#666"> </span>|<span style="color:#666"> </span>InvocationTargetException<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">throw</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>IllegalStateException(<span style="color:#ed9d13">&#34;Unable to create instance for &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>clazz.<span style="color:#bbb">getSimpleName</span>(),<span style="color:#666"> </span>e);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">  </span>}</span></span></code></pre></div>
<h2 id="conclusion">Conclusion</h2>
<p>&hellip; and well, that&rsquo;s actually all you need to implement. As stated above,
it&rsquo;s far from complete or error-prone. The important thing, though, is:
dependency injection is not some magical thing that happens behind the
curtains of famous and advanced frameworks. Instead, it&rsquo;s something that <strong>you
could have invented yourself</strong>.</p>
<h2 id="source-code">Source code</h2>
<p>The whole source code can be found
on <a href="https://github.com/mlesniak/dependency-injection">GitHub</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>You could have invented it yourself: Server-Sent Events</title>
      <link>https://example.com/articles/sse/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate><author>mail@mlesniak.com (Dr. Michael Lesniak)</author>
      <guid>https://example.com/articles/sse/</guid>
      <description>&lt;h2 id=&#34;why-do-we-need-server-sent-events&#34;&gt;Why do we need Server-Sent Events?&lt;/h2&gt;
&lt;p&gt;In modern web applications, real-time communication is more
important than ever. Features like live updates, collaborative
editing, notifications, and data streaming have become standard
expectations for users. Before we look at Server-Sent Events,
let&amp;rsquo;s first look at a few alternatives.&lt;/p&gt;
&lt;h3 id=&#34;alternatives-to-sse&#34;&gt;Alternatives to SSE&lt;/h3&gt;
&lt;h4 id=&#34;polling&#34;&gt;Polling&lt;/h4&gt;
&lt;p&gt;Polling is the simplest approach to achieve near-real-time
updates. The client repeatedly sends HTTP requests to the server
at regular intervals to check for changes. While easy to
implement, this method is inefficient. It generates unnecessary
network traffic and puts extra load on the server, especially
when updates are infrequent. The client may poll repeatedly even
when no updates are available, resulting in wasted resources.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="why-do-we-need-server-sent-events">Why do we need Server-Sent Events?</h2>
<p>In modern web applications, real-time communication is more
important than ever. Features like live updates, collaborative
editing, notifications, and data streaming have become standard
expectations for users. Before we look at Server-Sent Events,
let&rsquo;s first look at a few alternatives.</p>
<h3 id="alternatives-to-sse">Alternatives to SSE</h3>
<h4 id="polling">Polling</h4>
<p>Polling is the simplest approach to achieve near-real-time
updates. The client repeatedly sends HTTP requests to the server
at regular intervals to check for changes. While easy to
implement, this method is inefficient. It generates unnecessary
network traffic and puts extra load on the server, especially
when updates are infrequent. The client may poll repeatedly even
when no updates are available, resulting in wasted resources.</p>
<h4 id="long-polling">Long Polling</h4>
<p>Long polling improves upon basic polling by keeping the HTTP
connection open until the server has an update to send. Once
the server responds with data, the connection closes, and the
client immediately reopens it to wait for the next update. While
this reduces some of the inefficiencies of traditional polling,
it still has drawbacks. Opening and closing connections repeatedly
can strain resources, and implementing long polling often
introduces additional complexity.</p>
<h4 id="websockets">WebSockets</h4>
<p>WebSockets offer full-duplex communication, enabling the server
and client to send messages to each other in real time. While
this is powerful, WebSockets can be overkill for many use cases
that only require one-way communication from the server to the
client. They also add complexity in terms of setup, management,
and maintaining stateful connections, which can be challenging
in distributed or load-balanced environments.</p>
<h3 id="why-sse">Why SSE?</h3>
<p>SSE provide a
lightweight, efficient, and straightforward way for servers to
push updates to clients. They rely on a simple HTTP connection,
making them easy to implement and compatible with most
environments. Unlike WebSockets, SSE is inherently one-directional
(server to client), which is ideal for scenarios like live score
updates, stock price monitoring, or streaming logs.</p>
<p>With SSE, developers get a solution that&rsquo;s simple to use,
resource-friendly, and aligned with the natural statelessness of
HTTP. In many cases, it&rsquo;s the elegant middle ground between the
brute force of polling and the power of WebSockets.</p>
<h2 id="backend-with-spring-boot">Backend with Spring Boot</h2>
<p>The backend streams Server-Sent Events (SSE) using Spring Boot&rsquo;s
<code>SseEmitter</code> class. In general, this should be quite straightforward.
We expose an endpoint via <code>/events</code> with an optional count to restrict the number
of sent events. Once a client (which supports SSE) connects, we emit JSON-serialized
tick events with a unique id and event name.</p>
<p>In a classic REST-based API, one can add this as an extension to the query endpoints.
Besides <code>GET /users</code> and <code>GET /users/{id}</code> you would also have <code>GET /users/events</code> and
<code>GET /users/{id}/events</code>.</p>
<h3 id="implementation">Implementation</h3>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#6ab825;font-weight:bold">record</span> <span style="color:#447fcf;text-decoration:underline">Tick</span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>tick)<span style="color:#666"> </span>{<span style="color:#666"> </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#ffa500">@RestController</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">EventController</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>Logger<span style="color:#666"> </span>log<span style="color:#666"> </span>=<span style="color:#666"> </span>LoggerFactory.<span style="color:#bbb">getLogger</span>(EventController.<span style="color:#bbb">class</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>ObjectMapper<span style="color:#666"> </span>objectMapper;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#447fcf">EventController</span>(ObjectMapper<span style="color:#666"> </span>objectMapper)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">this</span>.<span style="color:#bbb">objectMapper</span><span style="color:#666"> </span>=<span style="color:#666"> </span>objectMapper;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">    </span><span style="color:#ffa500">@GetMapping</span>(<span style="color:#ed9d13">&#34;/events&#34;</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span>SseEmitter<span style="color:#666"> </span><span style="color:#447fcf">events</span>(<span style="color:#ffa500">@RequestParam</span>(name<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#ed9d13">&#34;count&#34;</span>,<span style="color:#666"> </span>required<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">false</span>)<span style="color:#666"> </span>Integer<span style="color:#666"> </span>count)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>max<span style="color:#666"> </span>=<span style="color:#666"> </span>count<span style="color:#666"> </span>==<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">null</span><span style="color:#666"> </span>?<span style="color:#666"> </span>10<span style="color:#666"> </span>:<span style="color:#666"> </span>count;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">        </span>log.<span style="color:#bbb">info</span>(<span style="color:#ed9d13">&#34;/events called with count {} and max {}&#34;</span>,<span style="color:#666"> </span>count,<span style="color:#666"> </span>max);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>emitter<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseEmitter(60<span style="color:#666"> </span>*<span style="color:#666"> </span>1000L);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>id<span style="color:#666"> </span>=<span style="color:#666"> </span>UUID.<span style="color:#bbb">randomUUID</span>().<span style="color:#bbb">toString</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">        </span>Executors.<span style="color:#bbb">newSingleThreadScheduledExecutor</span>().<span style="color:#bbb">execute</span>(()<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">            </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">                </span><span style="color:#6ab825;font-weight:bold">for</span><span style="color:#666"> </span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>i<span style="color:#666"> </span>=<span style="color:#666"> </span>0;<span style="color:#666"> </span>i<span style="color:#666"> </span>&lt;<span style="color:#666"> </span>max;<span style="color:#666"> </span>i++)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">                    </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>tick<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>Tick(i);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">                    </span>emitter.<span style="color:#bbb">send</span>(SseEmitter.<span style="color:#bbb">event</span>()<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">                            </span>.<span style="color:#bbb">name</span>(<span style="color:#ed9d13">&#34;tick&#34;</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">                            </span>.<span style="color:#bbb">id</span>(id)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">                            </span>.<span style="color:#bbb">data</span>(objectMapper.<span style="color:#bbb">writeValueAsString</span>(tick)));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">                    </span>TimeUnit.<span style="color:#bbb">MILLISECONDS</span>.<span style="color:#bbb">sleep</span>(500);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">                </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">                </span><span style="color:#999;font-style:italic">// Without a payload, the event is not correctly processed</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666">                </span><span style="color:#999;font-style:italic">// in the browser. This is actually expected behaviour,</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">                </span><span style="color:#999;font-style:italic">// see https://github.com/denoland/deno/issues/23135.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">32</span><span><span style="color:#666">                </span>emitter.<span style="color:#bbb">send</span>(SseEmitter.<span style="color:#bbb">event</span>().<span style="color:#bbb">name</span>(<span style="color:#ed9d13">&#34;close&#34;</span>).<span style="color:#bbb">data</span>(<span style="color:#ed9d13">&#34;&#34;</span>));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">33</span><span><span style="color:#666">                </span>log.<span style="color:#bbb">info</span>(<span style="color:#ed9d13">&#34;Closing connection&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">34</span><span><span style="color:#666">                </span>emitter.<span style="color:#bbb">complete</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">35</span><span><span style="color:#666">            </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(Exception<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">36</span><span><span style="color:#666">                </span>emitter.<span style="color:#bbb">completeWithError</span>(e);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">37</span><span><span style="color:#666">            </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">38</span><span><span style="color:#666">        </span>});<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">39</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">40</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>emitter;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">41</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">42</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<p>The only annoying trap was figuring out why the <code>close</code> event
was never processed by the frontend (see below). If you omit
any data, the browser is free to ignore the event&hellip;</p>
<h3 id="testing-the-endpoint-with-curl">Testing the endpoint with curl</h3>
<p>When using curl, this looks like</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span>$ curl http://localhost:9000/events?count=<span style="color:#3677a9">4</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:0}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:1}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:2}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:3}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span>event:close
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span>data:</span></span></code></pre></div>
<h2 id="a-simple-user-interface">A simple user interface</h2>
<p>By any means, I am not a frontend software engineer. Nonetheless, here&rsquo;s a basic, framework-less UI which
shows how to use SSE in a client.
<img src="https://mlesniak.com/articles/sse.png" />
The key implementation is this JavaScript snippet</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#24909d">document</span>.querySelector(<span style="color:#ed9d13">&#39;form&#39;</span>).addEventListener(<span style="color:#ed9d13">&#39;submit&#39;</span>, e =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span>    e.preventDefault();
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span>    <span style="color:#6ab825;font-weight:bold">const</span> count = <span style="color:#24909d">document</span>.getElementById(<span style="color:#ed9d13">&#39;count&#39;</span>).value;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span>    <span style="color:#24909d">document</span>.getElementById(<span style="color:#ed9d13">&#39;count&#39;</span>).value = <span style="color:#ed9d13">&#39;&#39;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span>    <span style="color:#6ab825;font-weight:bold">const</span> eventDisplay = <span style="color:#24909d">document</span>.getElementById(<span style="color:#ed9d13">&#39;events&#39;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span>    eventDisplay.innerHTML = <span style="color:#ed9d13">&#39;&#39;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span>    <span style="color:#6ab825;font-weight:bold">if</span> (<span style="color:#24909d">window</span>.eventSource) <span style="color:#24909d">window</span>.eventSource.close();
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span>    <span style="color:#24909d">window</span>.eventSource = <span style="color:#6ab825;font-weight:bold">new</span> EventSource(<span style="color:#ed9d13">`/events?count=</span><span style="color:#ed9d13">${</span>count<span style="color:#ed9d13">}</span><span style="color:#ed9d13">`</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span>    eventSource.addEventListener(<span style="color:#ed9d13">&#39;tick&#39;</span>, event =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span>        <span style="color:#6ab825;font-weight:bold">const</span> p = <span style="color:#24909d">document</span>.createElement(<span style="color:#ed9d13">&#39;p&#39;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span>        p.textContent = <span style="color:#ed9d13">`Tick: </span><span style="color:#ed9d13">${</span>JSON.parse(event.data).tick + <span style="color:#3677a9">1</span><span style="color:#ed9d13">}</span><span style="color:#ed9d13">`</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span>        eventDisplay.appendChild(p);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span>    });
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span>    eventSource.addEventListener(<span style="color:#ed9d13">&#39;close&#39;</span>, () =&gt; eventSource.close());
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span>});</span></span></code></pre></div>
<p>Once we&rsquo;ve subscribed to the <code>submit</code> event of the form, we use the
Browser&rsquo;s <a href="https://developer.mozilla.org/de/docs/Web/API/EventSource">EventSource API</a> to listen
to events sent by the server and react accordingly.</p>
<p>If we do not react to a <code>close</code> event by closing our listener, and the server closes its connection on their side,
the browser will simply reopen the connection after a few seconds and listen to new events again.</p>
<h2 id="the-specification">The specification</h2>
<p>Server-Sent Events (SSE) are defined as <a href="https://html.spec.whatwg.org/multipage/server-sent-events.html">part of the HTML5 specification</a>.
They provide a standardized way for servers to
push updates to web clients over a persistent HTTP connection
using a lightweight, text-based protocol.</p>
<h3 id="key-characteristics">Key Characteristics</h3>
<ol>
<li>
<p><strong>Protocol</strong>:</p>
<ul>
<li>SSE uses a standard HTTP connection (typically GET requests).</li>
<li>The <code>Content-Type</code> for SSE responses must be <code>text/event-stream</code>.</li>
<li>HTTP headers like <code>Cache-Control: no-cache</code> are commonly used
to prevent caching of the event stream by intermediaries.</li>
<li>Connections are usually kept open indefinitely, relying on
persistent HTTP/1.1 or HTTP/2 features.</li>
</ul>
</li>
<li>
<p><strong>Event Format</strong>:</p>
<ul>
<li>Events are sent as plain text in the following structure:






<pre tabindex="0"><code>id: &lt;unique-id&gt;
event: &lt;event-name&gt;
data: &lt;payload&gt;</code></pre>
</li>
<li>Each event ends with a blank line to indicate completion.</li>
<li>Binary data is not directly supported, i.e., must be encoded with Base64.</li>
</ul>
</li>
<li>
<p><strong>Auto-Reconnection</strong>:</p>
<ul>
<li>If the connection is lost, the browser automatically attempts
to reconnect after a short delay.</li>
<li>The <code>id</code> field allows clients to resume from the last event
by sending a <code>Last-Event-ID</code> header in subsequent requests.</li>
</ul>
</li>
<li>
<p><strong>Character Encoding</strong>:</p>
<ul>
<li>SSE requires UTF-8 encoding for all transmitted data.</li>
</ul>
</li>
</ol>
<h3 id="an-exchange-with-curl">An exchange with curl</h3>
<p>Coming back to our example with curl, we can verify the actual
HTTP headers sent in the response.</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span>$ curl -v http://localhost:9000/events?count=<span style="color:#3677a9">4</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span>* Host localhost:9000 was resolved.
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span>* IPv6: ::1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span>* IPv4: 127.0.0.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span>*   Trying [::1]:9000...
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span>* Connected to localhost (::1) port <span style="color:#3677a9">9000</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span>&gt; GET /events?count=<span style="color:#3677a9">4</span> HTTP/1.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span>&gt; Host: localhost:9000
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span>&gt; User-Agent: curl/8.9.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span>&gt; Accept: */*
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span>* Request completely sent off
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span>&lt; HTTP/1.1 <span style="color:#3677a9">200</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span>&lt; Content-Type: text/event-stream
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span>&lt; Transfer-Encoding: chunked
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span>&lt; Date: Sat, <span style="color:#3677a9">21</span> Dec <span style="color:#3677a9">2024</span> 17:32:27 GMT
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span>&lt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span>id:5d482700-187c-4928-8de5-cca0681f0aac
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:0}</span></span></code></pre></div>
<h2 id="a-backend-using-just-the-jdk">A backend using just the JDK</h2>
<p>Looks like Server-Sent Events are not magic at all. While Spring allows us to use
them via a comfortable API through the <code>SseEmitter</code> class, we can easily write our
own backend implementation &ndash; the frontend part is left as an exercise for the reader.</p>
<p>For convinience, we also left out handling of the optional <code>count</code> parameter since
it&rsquo;s not relevant for the protocol and the thread handling. It&rsquo;s easy to add but
would hide the relevant part, the implementation of SSE itself.</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#999;font-style:italic">// ...boring package declaration and imports...</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">record</span> <span style="color:#447fcf;text-decoration:underline">TickEvent</span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>tick)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">   </span>String<span style="color:#666"> </span><span style="color:#447fcf">toJson</span>()<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#ed9d13">&#34;{\&#34;tick\&#34;:&#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>tick<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;}&#34;</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">record</span> <span style="color:#447fcf;text-decoration:underline">SseEvent</span>(String<span style="color:#666"> </span>id,<span style="color:#666"> </span>String<span style="color:#666"> </span>event,<span style="color:#666"> </span>String<span style="color:#666"> </span>data)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">   </span>String<span style="color:#666"> </span><span style="color:#447fcf">toSseFormat</span>()<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// Not beautiful, but good enough.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#ed9d13">&#34;id: &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>id<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;\n&#34;</span><span style="color:#666"> </span>+<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">              </span><span style="color:#ed9d13">&#34;event: &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>event<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;\n&#34;</span><span style="color:#666"> </span>+<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">              </span><span style="color:#ed9d13">&#34;data: &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>data<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;\n\n&#34;</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">SseServer</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">   </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">main</span>(String[]<span style="color:#666"> </span>args)<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">throws</span><span style="color:#666"> </span>Exception<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// Create a basic HTTP server which is part of the JDK.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">      </span>HttpServer<span style="color:#666"> </span>server<span style="color:#666"> </span>=<span style="color:#666"> </span>HttpServer.<span style="color:#bbb">create</span>(<span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>InetSocketAddress(9000),<span style="color:#666"> </span>0);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">      </span>server.<span style="color:#bbb">createContext</span>(<span style="color:#ed9d13">&#34;/events&#34;</span>,<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseHandler());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">      </span>server.<span style="color:#bbb">setExecutor</span>(Executors.<span style="color:#bbb">newCachedThreadPool</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">      </span>server.<span style="color:#bbb">start</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">   </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">SseHandler</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">implements</span><span style="color:#666"> </span>HttpHandler<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>ObjectMapper<span style="color:#666"> </span>objectMapper<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>ObjectMapper();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666">      </span><span style="color:#ffa500">@Override</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">handle</span>(HttpExchange<span style="color:#666"> </span>exchange)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">32</span><span><span style="color:#666">         </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">33</span><span><span style="color:#666">            </span><span style="color:#999;font-style:italic">// Set default headers for SSE.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">34</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">getResponseHeaders</span>().<span style="color:#bbb">set</span>(<span style="color:#ed9d13">&#34;Content-Type&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;text/event-stream&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">35</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">getResponseHeaders</span>().<span style="color:#bbb">set</span>(<span style="color:#ed9d13">&#34;Cache-Control&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;no-cache&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">36</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">getResponseHeaders</span>().<span style="color:#bbb">set</span>(<span style="color:#ed9d13">&#34;Connection&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;keep-alive&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">37</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">sendResponseHeaders</span>(200,<span style="color:#666"> </span>0);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">38</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">39</span><span><span style="color:#666">            </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>(OutputStream<span style="color:#666"> </span>os<span style="color:#666"> </span>=<span style="color:#666"> </span>exchange.<span style="color:#bbb">getResponseBody</span>())<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">40</span><span><span style="color:#666">               </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>id<span style="color:#666"> </span>=<span style="color:#666"> </span>UUID.<span style="color:#bbb">randomUUID</span>().<span style="color:#bbb">toString</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">41</span><span><span style="color:#666">               </span><span style="color:#6ab825;font-weight:bold">for</span><span style="color:#666"> </span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>i<span style="color:#666"> </span>=<span style="color:#666"> </span>0;<span style="color:#666"> </span>i<span style="color:#666"> </span>&lt;<span style="color:#666"> </span>10;<span style="color:#666"> </span>i++)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">42</span><span><span style="color:#666">                  </span>TickEvent<span style="color:#666"> </span>tickEvent<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>TickEvent(i);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">43</span><span><span style="color:#666">                  </span>SseEvent<span style="color:#666"> </span>sseEvent<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseEvent(<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">44</span><span><span style="color:#666">                          </span>id,<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">45</span><span><span style="color:#666">                          </span><span style="color:#ed9d13">&#34;tick&#34;</span>,<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">46</span><span><span style="color:#666">                          </span>tickEvent.<span style="color:#bbb">toJson</span>()<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">47</span><span><span style="color:#666">                  </span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">48</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">49</span><span><span style="color:#666">                  </span>os.<span style="color:#bbb">write</span>(sseEvent.<span style="color:#bbb">toSseFormat</span>().<span style="color:#bbb">getBytes</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">50</span><span><span style="color:#666">                  </span>os.<span style="color:#bbb">flush</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">51</span><span><span style="color:#666">                  </span>Thread.<span style="color:#bbb">sleep</span>(500);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">52</span><span><span style="color:#666">               </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">53</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">54</span><span><span style="color:#666">               </span>SseEvent<span style="color:#666"> </span>closeEvent<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseEvent(<span style="color:#ed9d13">&#34;&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;close&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">55</span><span><span style="color:#666">               </span>os.<span style="color:#bbb">write</span>(closeEvent.<span style="color:#bbb">toSseFormat</span>().<span style="color:#bbb">getBytes</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">56</span><span><span style="color:#666">               </span>os.<span style="color:#bbb">flush</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">57</span><span><span style="color:#666">            </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">58</span><span><span style="color:#666">         </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(Exception<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">59</span><span><span style="color:#666">            </span><span style="color:#999;font-style:italic">// 🙈 ... good enough for us.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">60</span><span><span style="color:#666">            </span>e.<span style="color:#bbb">printStackTrace</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">61</span><span><span style="color:#666">         </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">62</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">63</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">64</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<h2 id="source-code">Source code</h2>
<p>The whole source code can be found on <a href="https://github.com/mlesniak/server-side-events">GitHub</a>.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
