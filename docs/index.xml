<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Dr. Michael Lesniak -- Turning Code Into Business Value</title>
    <link>https://example.com/</link>
    <description>Recent content on Dr. Michael Lesniak -- Turning Code Into Business Value</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>mail@mlesniak.com (Dr. Michael Lesniak)</managingEditor>
    <webMaster>mail@mlesniak.com (Dr. Michael Lesniak)</webMaster>
    <lastBuildDate>Sat, 21 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>You could have invented it yourself: Server-Side Events</title>
      <link>https://example.com/articles/sse/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate><author>mail@mlesniak.com (Dr. Michael Lesniak)</author>
      <guid>https://example.com/articles/sse/</guid>
      <description>Why do we need Server-Side Events? In modern web applications, real-time communication is more important than ever. Features like live updates, collaborative editing, notifications, and data streaming have become standard expectations for users. Before we look at Server-Side Events, let&amp;rsquo;s first look at a few alternatives.
Alternatives to SSE Polling Polling is the simplest approach to achieve near-real-time updates. The client repeatedly sends HTTP requests to the server at regular intervals to check for changes.</description>
      <content:encoded><![CDATA[<h2 id="why-do-we-need-server-side-events">Why do we need Server-Side Events?</h2>
<p>In modern web applications, real-time communication is more
important than ever. Features like live updates, collaborative
editing, notifications, and data streaming have become standard
expectations for users. Before we look at Server-Side Events,
let&rsquo;s first look at a few alternatives.</p>
<h3 id="alternatives-to-sse">Alternatives to SSE</h3>
<h4 id="polling">Polling</h4>
<p>Polling is the simplest approach to achieve near-real-time
updates. The client repeatedly sends HTTP requests to the server
at regular intervals to check for changes. While easy to
implement, this method is inefficient. It generates unnecessary
network traffic and puts extra load on the server, especially
when updates are infrequent. The client may poll repeatedly even
when no updates are available, resulting in wasted resources.</p>
<h4 id="long-polling">Long Polling</h4>
<p>Long polling improves upon basic polling by keeping the HTTP
connection open until the server has an update to send. Once
the server responds with data, the connection closes, and the
client immediately reopens it to wait for the next update. While
this reduces some of the inefficiencies of traditional polling,
it still has drawbacks. Opening and closing connections repeatedly
can strain resources, and implementing long polling often
introduces additional complexity.</p>
<h4 id="websockets">WebSockets</h4>
<p>WebSockets offer full-duplex communication, enabling the server
and client to send messages to each other in real time. While
this is powerful, WebSockets can be overkill for many use cases
that only require one-way communication from the server to the
client. They also add complexity in terms of setup, management,
and maintaining stateful connections, which can be challenging
in distributed or load-balanced environments.</p>
<h3 id="why-sse">Why SSE?</h3>
<p>SSE provide a
lightweight, efficient, and straightforward way for servers to
push updates to clients. They rely on a simple HTTP connection,
making them easy to implement and compatible with most
environments. Unlike WebSockets, SSE is inherently one-directional
(server to client), which is ideal for scenarios like live score
updates, stock price monitoring, or streaming logs.</p>
<p>With SSE, developers get a solution that&rsquo;s simple to use,
resource-friendly, and aligned with the natural statelessness of
HTTP. In many cases, it&rsquo;s the elegant middle ground between the
brute force of polling and the power of WebSockets.</p>
<h2 id="backend-with-spring-boot">Backend with Spring Boot</h2>
<p>The backend streams Server-Side Events (SSE) using Spring Boot&rsquo;s
<code>SseEmitter</code> class. In general, this should be quite straightforward.
We expose an endpoint via <code>/events</code> with an optional count to restrict the number
of sent events. Once a client (which supports SSE) connects, we emit JSON-serialized
tick events with a unique id and event name.</p>
<p>In a classic REST-based API, one can add this as an extension to the query endpoints.
Besides <code>GET /users</code> and <code>GET /users/{id}</code> you would also have <code>GET /users/events</code> and
<code>GET /users/{id}/events</code>.</p>
<h3 id="implementation">Implementation</h3>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#6ab825;font-weight:bold">record</span> <span style="color:#447fcf;text-decoration:underline">Tick</span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>tick)<span style="color:#666"> </span>{<span style="color:#666"> </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#ffa500">@RestController</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">EventController</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>Logger<span style="color:#666"> </span>log<span style="color:#666"> </span>=<span style="color:#666"> </span>LoggerFactory.<span style="color:#bbb">getLogger</span>(EventController.<span style="color:#bbb">class</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>ObjectMapper<span style="color:#666"> </span>objectMapper;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#447fcf">EventController</span>(ObjectMapper<span style="color:#666"> </span>objectMapper)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">this</span>.<span style="color:#bbb">objectMapper</span><span style="color:#666"> </span>=<span style="color:#666"> </span>objectMapper;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">    </span><span style="color:#ffa500">@GetMapping</span>(<span style="color:#ed9d13">&#34;/events&#34;</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span>SseEmitter<span style="color:#666"> </span><span style="color:#447fcf">events</span>(<span style="color:#ffa500">@RequestParam</span>(name<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#ed9d13">&#34;count&#34;</span>,<span style="color:#666"> </span>required<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">false</span>)<span style="color:#666"> </span>Integer<span style="color:#666"> </span>count)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>max<span style="color:#666"> </span>=<span style="color:#666"> </span>count<span style="color:#666"> </span>==<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">null</span><span style="color:#666"> </span>?<span style="color:#666"> </span>10<span style="color:#666"> </span>:<span style="color:#666"> </span>count;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">        </span>log.<span style="color:#bbb">info</span>(<span style="color:#ed9d13">&#34;/events called with count {} and max {}&#34;</span>,<span style="color:#666"> </span>count,<span style="color:#666"> </span>max);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>emitter<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseEmitter(60<span style="color:#666"> </span>*<span style="color:#666"> </span>1000L);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>id<span style="color:#666"> </span>=<span style="color:#666"> </span>UUID.<span style="color:#bbb">randomUUID</span>().<span style="color:#bbb">toString</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">        </span>Executors.<span style="color:#bbb">newSingleThreadScheduledExecutor</span>().<span style="color:#bbb">execute</span>(()<span style="color:#666"> </span>-&gt;<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">            </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">                </span><span style="color:#6ab825;font-weight:bold">for</span><span style="color:#666"> </span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>i<span style="color:#666"> </span>=<span style="color:#666"> </span>0;<span style="color:#666"> </span>i<span style="color:#666"> </span>&lt;<span style="color:#666"> </span>max;<span style="color:#666"> </span>i++)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">                    </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>tick<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>Tick(i);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">                    </span>emitter.<span style="color:#bbb">send</span>(SseEmitter.<span style="color:#bbb">event</span>()<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">                            </span>.<span style="color:#bbb">name</span>(<span style="color:#ed9d13">&#34;tick&#34;</span>)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">                            </span>.<span style="color:#bbb">id</span>(id)<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">                            </span>.<span style="color:#bbb">data</span>(objectMapper.<span style="color:#bbb">writeValueAsString</span>(tick)));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">                    </span>TimeUnit.<span style="color:#bbb">MILLISECONDS</span>.<span style="color:#bbb">sleep</span>(500);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">                </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">                </span><span style="color:#999;font-style:italic">// Without a payload, the event is not correctly processed</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666">                </span><span style="color:#999;font-style:italic">// in the browser. This is actually expected behaviour,</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">                </span><span style="color:#999;font-style:italic">// see https://github.com/denoland/deno/issues/23135.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">32</span><span><span style="color:#666">                </span>emitter.<span style="color:#bbb">send</span>(SseEmitter.<span style="color:#bbb">event</span>().<span style="color:#bbb">name</span>(<span style="color:#ed9d13">&#34;close&#34;</span>).<span style="color:#bbb">data</span>(<span style="color:#ed9d13">&#34;&#34;</span>));<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">33</span><span><span style="color:#666">                </span>log.<span style="color:#bbb">info</span>(<span style="color:#ed9d13">&#34;Closing connection&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">34</span><span><span style="color:#666">                </span>emitter.<span style="color:#bbb">complete</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">35</span><span><span style="color:#666">            </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(Exception<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">36</span><span><span style="color:#666">                </span>emitter.<span style="color:#bbb">completeWithError</span>(e);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">37</span><span><span style="color:#666">            </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">38</span><span><span style="color:#666">        </span>});<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">39</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">40</span><span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span>emitter;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">41</span><span><span style="color:#666">    </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">42</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<p>The only annoying trap was figuring out why the <code>close</code> event
was never processed by the frontend (see below). If you omit
any data, the browser is free to ignore the event&hellip;</p>
<h3 id="testing-the-endpoint-with-curl">Testing the endpoint with curl</h3>
<p>When using curl, this looks like</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span>$ curl http://localhost:9000/events?count=<span style="color:#3677a9">4</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:0}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:1}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:2}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span>id:ba711ed1-bb55-4696-9312-ca4c10725e5a
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:3}
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span>event:close
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span>data:</span></span></code></pre></div>
<h2 id="a-simple-user-interface">A simple user interface</h2>
<p>By any means, I am not a frontend software engineer. Nonetheless, here&rsquo;s a basic, framework-less UI which
shows how to use SSE in a client.
<img src="https://mlesniak.com/articles/sse.png" />
The key implementation is this JavaScript snippet</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#24909d">document</span>.querySelector(<span style="color:#ed9d13">&#39;form&#39;</span>).addEventListener(<span style="color:#ed9d13">&#39;submit&#39;</span>, e =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span>    e.preventDefault();
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span>    <span style="color:#6ab825;font-weight:bold">const</span> count = <span style="color:#24909d">document</span>.getElementById(<span style="color:#ed9d13">&#39;count&#39;</span>).value;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span>    <span style="color:#24909d">document</span>.getElementById(<span style="color:#ed9d13">&#39;count&#39;</span>).value = <span style="color:#ed9d13">&#39;&#39;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span>    <span style="color:#6ab825;font-weight:bold">const</span> eventDisplay = <span style="color:#24909d">document</span>.getElementById(<span style="color:#ed9d13">&#39;events&#39;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span>    eventDisplay.innerHTML = <span style="color:#ed9d13">&#39;&#39;</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span>    <span style="color:#6ab825;font-weight:bold">if</span> (<span style="color:#24909d">window</span>.eventSource) <span style="color:#24909d">window</span>.eventSource.close();
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span>    <span style="color:#24909d">window</span>.eventSource = <span style="color:#6ab825;font-weight:bold">new</span> EventSource(<span style="color:#ed9d13">`/events?count=</span><span style="color:#ed9d13">${</span>count<span style="color:#ed9d13">}</span><span style="color:#ed9d13">`</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span>    eventSource.addEventListener(<span style="color:#ed9d13">&#39;tick&#39;</span>, event =&gt; {
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span>        <span style="color:#6ab825;font-weight:bold">const</span> p = <span style="color:#24909d">document</span>.createElement(<span style="color:#ed9d13">&#39;p&#39;</span>);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span>        p.textContent = <span style="color:#ed9d13">`Tick: </span><span style="color:#ed9d13">${</span>JSON.parse(event.data).tick + <span style="color:#3677a9">1</span><span style="color:#ed9d13">}</span><span style="color:#ed9d13">`</span>;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span>        eventDisplay.appendChild(p);
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span>    });
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span>    eventSource.addEventListener(<span style="color:#ed9d13">&#39;close&#39;</span>, () =&gt; eventSource.close());
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span>});</span></span></code></pre></div>
<p>Once we&rsquo;ve subscribed to the <code>submit</code> event of the form, we use the
Browser&rsquo;s <a href="https://developer.mozilla.org/de/docs/Web/API/EventSource">EventSource API</a> to listen
to events sent by the server and react accordingly.</p>
<p>If we do not react to a <code>close</code> event by closing our listener, and the server closes its connection on their side,
the browser will simply reopen the connection after a few seconds and listen to new events again.</p>
<h2 id="the-specification">The specification</h2>
<p>Server-Side Events (SSE) are defined as <a href="https://html.spec.whatwg.org/multipage/server-sent-events.html">part of the HTML5 specification</a>.
They provide a standardized way for servers to
push updates to web clients over a persistent HTTP connection
using a lightweight, text-based protocol.</p>
<h3 id="key-characteristics">Key Characteristics</h3>
<ol>
<li>
<p><strong>Protocol</strong>:</p>
<ul>
<li>SSE uses a standard HTTP connection (typically GET requests).</li>
<li>The <code>Content-Type</code> for SSE responses must be <code>text/event-stream</code>.</li>
<li>HTTP headers like <code>Cache-Control: no-cache</code> are commonly used
to prevent caching of the event stream by intermediaries.</li>
<li>Connections are usually kept open indefinitely, relying on
persistent HTTP/1.1 or HTTP/2 features.</li>
</ul>
</li>
<li>
<p><strong>Event Format</strong>:</p>
<ul>
<li>Events are sent as plain text in the following structure:






<pre tabindex="0"><code>id: &lt;unique-id&gt;
event: &lt;event-name&gt;
data: &lt;payload&gt;</code></pre>
</li>
<li>Each event ends with a blank line to indicate completion.</li>
<li>Binary data is not directly supported, i.e., must be encoded with Base64.</li>
</ul>
</li>
<li>
<p><strong>Auto-Reconnection</strong>:</p>
<ul>
<li>If the connection is lost, the browser automatically attempts
to reconnect after a short delay.</li>
<li>The <code>id</code> field allows clients to resume from the last event
by sending a <code>Last-Event-ID</code> header in subsequent requests.</li>
</ul>
</li>
<li>
<p><strong>Character Encoding</strong>:</p>
<ul>
<li>SSE requires UTF-8 encoding for all transmitted data.</li>
</ul>
</li>
</ol>
<h3 id="an-exchange-with-curl">An exchange with curl</h3>
<p>Coming back to our example with curl, we can verify the actual
HTTP headers sent in the response.</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span>$ curl -v http://localhost:9000/events?count=<span style="color:#3677a9">4</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span>* Host localhost:9000 was resolved.
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span>* IPv6: ::1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span>* IPv4: 127.0.0.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span>*   Trying [::1]:9000...
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span>* Connected to localhost (::1) port <span style="color:#3677a9">9000</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span>&gt; GET /events?count=<span style="color:#3677a9">4</span> HTTP/1.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span>&gt; Host: localhost:9000
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span>&gt; User-Agent: curl/8.9.1
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span>&gt; Accept: */*
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span>&gt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span>* Request completely sent off
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span>&lt; HTTP/1.1 <span style="color:#3677a9">200</span>
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span>&lt; Content-Type: text/event-stream
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span>&lt; Transfer-Encoding: chunked
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span>&lt; Date: Sat, <span style="color:#3677a9">21</span> Dec <span style="color:#3677a9">2024</span> 17:32:27 GMT
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span>&lt;
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span>event:tick
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span>id:5d482700-187c-4928-8de5-cca0681f0aac
</span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span>data:{<span style="color:#ed9d13">&#34;tick&#34;</span>:0}</span></span></code></pre></div>
<h2 id="a-backend-using-just-the-jdk">A backend using just the JDK</h2>
<p>Looks like Server-Side Events are not magic at all. While Spring allows us to use
them via a comfortable API through the <code>SseEmitter</code> class, we can easily write our
own backend implementation &ndash; the frontend part is left as an exercise for the reader.</p>






<div class="highlight"><pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-java" data-lang="java"><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1</span><span><span style="color:#999;font-style:italic">// ...boring package declaration and imports...</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">record</span> <span style="color:#447fcf;text-decoration:underline">TickEvent</span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>tick)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4</span><span><span style="color:#666">   </span>String<span style="color:#666"> </span><span style="color:#447fcf">toJson</span>()<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#ed9d13">&#34;{\&#34;tick\&#34;:&#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>tick<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;}&#34;</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">record</span> <span style="color:#447fcf;text-decoration:underline">SseEvent</span>(String<span style="color:#666"> </span>id,<span style="color:#666"> </span>String<span style="color:#666"> </span>event,<span style="color:#666"> </span>String<span style="color:#666"> </span>data)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10</span><span><span style="color:#666">   </span>String<span style="color:#666"> </span><span style="color:#447fcf">toSseFormat</span>()<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// Not beautiful, but good enough.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">return</span><span style="color:#666"> </span><span style="color:#ed9d13">&#34;id: &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>id<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;\n&#34;</span><span style="color:#666"> </span>+<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13</span><span><span style="color:#666">              </span><span style="color:#ed9d13">&#34;event: &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>event<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;\n&#34;</span><span style="color:#666"> </span>+<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14</span><span><span style="color:#666">              </span><span style="color:#ed9d13">&#34;data: &#34;</span><span style="color:#666"> </span>+<span style="color:#666"> </span>data<span style="color:#666"> </span>+<span style="color:#666"> </span><span style="color:#ed9d13">&#34;\n\n&#34;</span>;<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16</span><span><span style="color:#666"></span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18</span><span><span style="color:#666"></span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">SseServer</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19</span><span><span style="color:#666">   </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">main</span>(String[]<span style="color:#666"> </span>args)<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">throws</span><span style="color:#666"> </span>Exception<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20</span><span><span style="color:#666">      </span><span style="color:#999;font-style:italic">// Create a basic HTTP server which is part of the JDK.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21</span><span><span style="color:#666">      </span>HttpServer<span style="color:#666"> </span>server<span style="color:#666"> </span>=<span style="color:#666"> </span>HttpServer.<span style="color:#bbb">create</span>(<span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>InetSocketAddress(9000),<span style="color:#666"> </span>0);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22</span><span><span style="color:#666">      </span>server.<span style="color:#bbb">createContext</span>(<span style="color:#ed9d13">&#34;/events&#34;</span>,<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseHandler());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23</span><span><span style="color:#666">      </span>server.<span style="color:#bbb">setExecutor</span>(Executors.<span style="color:#bbb">newCachedThreadPool</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24</span><span><span style="color:#666">      </span>server.<span style="color:#bbb">start</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">25</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">26</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">27</span><span><span style="color:#666">   </span><span style="color:#6ab825;font-weight:bold">static</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">class</span> <span style="color:#447fcf;text-decoration:underline">SseHandler</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">implements</span><span style="color:#666"> </span>HttpHandler<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">28</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">private</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">final</span><span style="color:#666"> </span>ObjectMapper<span style="color:#666"> </span>objectMapper<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>ObjectMapper();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">29</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">30</span><span><span style="color:#666">      </span><span style="color:#ffa500">@Override</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">31</span><span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">public</span><span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">void</span><span style="color:#666"> </span><span style="color:#447fcf">handle</span>(HttpExchange<span style="color:#666"> </span>exchange)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">32</span><span><span style="color:#666">         </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">33</span><span><span style="color:#666">            </span><span style="color:#999;font-style:italic">// Set default headers for SSE.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">34</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">getResponseHeaders</span>().<span style="color:#bbb">set</span>(<span style="color:#ed9d13">&#34;Content-Type&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;text/event-stream&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">35</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">getResponseHeaders</span>().<span style="color:#bbb">set</span>(<span style="color:#ed9d13">&#34;Cache-Control&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;no-cache&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">36</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">getResponseHeaders</span>().<span style="color:#bbb">set</span>(<span style="color:#ed9d13">&#34;Connection&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;keep-alive&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">37</span><span><span style="color:#666">            </span>exchange.<span style="color:#bbb">sendResponseHeaders</span>(200,<span style="color:#666"> </span>0);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">38</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">39</span><span><span style="color:#666">            </span><span style="color:#6ab825;font-weight:bold">try</span><span style="color:#666"> </span>(OutputStream<span style="color:#666"> </span>os<span style="color:#666"> </span>=<span style="color:#666"> </span>exchange.<span style="color:#bbb">getResponseBody</span>())<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">40</span><span><span style="color:#666">               </span><span style="color:#6ab825;font-weight:bold">var</span><span style="color:#666"> </span>id<span style="color:#666"> </span>=<span style="color:#666"> </span>UUID.<span style="color:#bbb">randomUUID</span>().<span style="color:#bbb">toString</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">41</span><span><span style="color:#666">               </span><span style="color:#6ab825;font-weight:bold">for</span><span style="color:#666"> </span>(<span style="color:#6ab825;font-weight:bold">int</span><span style="color:#666"> </span>i<span style="color:#666"> </span>=<span style="color:#666"> </span>0;<span style="color:#666"> </span>i<span style="color:#666"> </span>&lt;<span style="color:#666"> </span>10;<span style="color:#666"> </span>i++)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">42</span><span><span style="color:#666">                  </span>TickEvent<span style="color:#666"> </span>tickEvent<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>TickEvent(i);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">43</span><span><span style="color:#666">                  </span>SseEvent<span style="color:#666"> </span>sseEvent<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseEvent(<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">44</span><span><span style="color:#666">                          </span>id,<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">45</span><span><span style="color:#666">                          </span><span style="color:#ed9d13">&#34;tick&#34;</span>,<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">46</span><span><span style="color:#666">                          </span>tickEvent.<span style="color:#bbb">toJson</span>()<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">47</span><span><span style="color:#666">                  </span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">48</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">49</span><span><span style="color:#666">                  </span>os.<span style="color:#bbb">write</span>(sseEvent.<span style="color:#bbb">toSseFormat</span>().<span style="color:#bbb">getBytes</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">50</span><span><span style="color:#666">                  </span>os.<span style="color:#bbb">flush</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">51</span><span><span style="color:#666">                  </span>Thread.<span style="color:#bbb">sleep</span>(500);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">52</span><span><span style="color:#666">               </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">53</span><span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">54</span><span><span style="color:#666">               </span>SseEvent<span style="color:#666"> </span>closeEvent<span style="color:#666"> </span>=<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">new</span><span style="color:#666"> </span>SseEvent(<span style="color:#ed9d13">&#34;&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;close&#34;</span>,<span style="color:#666"> </span><span style="color:#ed9d13">&#34;&#34;</span>);<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">55</span><span><span style="color:#666">               </span>os.<span style="color:#bbb">write</span>(closeEvent.<span style="color:#bbb">toSseFormat</span>().<span style="color:#bbb">getBytes</span>());<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">56</span><span><span style="color:#666">               </span>os.<span style="color:#bbb">flush</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">57</span><span><span style="color:#666">            </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">58</span><span><span style="color:#666">         </span>}<span style="color:#666"> </span><span style="color:#6ab825;font-weight:bold">catch</span><span style="color:#666"> </span>(Exception<span style="color:#666"> </span>e)<span style="color:#666"> </span>{<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">59</span><span><span style="color:#666">            </span><span style="color:#999;font-style:italic">// 🙈 ... good enough for us.</span><span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">60</span><span><span style="color:#666">            </span>e.<span style="color:#bbb">printStackTrace</span>();<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">61</span><span><span style="color:#666">         </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">62</span><span><span style="color:#666">      </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">63</span><span><span style="color:#666">   </span>}<span style="color:#666">
</span></span></span><span style="display:flex;"><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">64</span><span><span style="color:#666"></span>}</span></span></code></pre></div>
<h2 id="source-code">Source code</h2>
<p>The whole source code can be found on <a href="https://github.com/mlesniak/server-side-events">GitHub</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Contact options and legal notice</title>
      <link>https://example.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>mail@mlesniak.com (Dr. Michael Lesniak)</author>
      <guid>https://example.com/contact/</guid>
      <description>Provider Dr. Michael Lesniak
Joseph-König-Str. 8
48147 Münster
Contact options Email: mail@mlesniak.com LinkedIn: Link to my profile Phone: +49 151 551 69 221
Company details VAT identification number: DE366616834
Online Dispute Resolution (ODR) Online dispute resolution: The European Commission provides a platform for Online Dispute Resolution (ODR), which can be accessed at https://ec.europa.eu/consumers/odr. Consumers have the possibility to use this platform to settle their disputes.
Liability and Intellectual Property Rights Information Liability Disclaimer: While the content of this website has been put together with great care and reflects our current knowledge, it is provided for information purposes without being legally binding, unless the disclosure of this information is required by law (e.</description>
      <content:encoded><![CDATA[<h4 id="provider">Provider</h4>
<p>Dr. Michael Lesniak<br>
Joseph-König-Str. 8<br>
48147 Münster<br></p>
<h4 id="contact-options">Contact options</h4>
<p>Email: <a href="mailto:mail@mlesniak.com">mail@mlesniak.com</a>  <br/>
LinkedIn: <a href="https://www.linkedin.com/in/dr-michael-lesniak-1577a315/">Link to my profile</a> <br/>
Phone: +49 151 551 69 221<br/></p>
<h4 id="company-details">Company details</h4>
<p>VAT identification number: DE366616834</p>
<h4 id="online-dispute-resolution-odr">Online Dispute Resolution (ODR)</h4>
<p class="justify">Online dispute resolution: The European Commission provides a platform for Online Dispute Resolution (ODR), which can be accessed at <a href="https://ec.europa.eu/consumers/odr">https://ec.europa.eu/consumers/odr</a>. Consumers have the possibility to use this platform to settle their disputes.</p>
<h4 id="liability-and-intellectual-property-rights-information">Liability and Intellectual Property Rights Information</h4>
<p class="justify">Liability Disclaimer: While the content of this website has been put together with great care and reflects our current knowledge, it is provided for information purposes without being legally binding, unless the disclosure of this information is required by law (e.g. the legal information), the privacy policy, terms and conditions or mandatory instructions for consumers) . We reserve the right to modify or delete the content, whether in full or in part, provided this does not affect our existing contractual obligations. All website content is subject to change and non-binding.</p>
<p class="justify">Link Disclaimer: We do not accept any responsibility for or endorse the content of external websites we link to, whether directly or indirectly. The providers of the linked websites are solely responsible for all content presented on their websites and in particular, any damage resulting from the use the information offered on their websites.</p>
<p class="justify">Copyrights and Trademarks: All contents presented on this website, such as texts, photographs, graphics, brands and trademarks are protected by the respective intellectual property rights (copyrights, trademark rights). The use, reproduction, etc. are subject to our rights or the rights of the respective authors or rights owners.</p>
<p class="justify">Information on legal infringements: Please notify us if you notice any rights violations on our website. Once notified, we will promptly remove any illegal content or links.</p>
]]></content:encoded>
    </item>
    <item>
      <title>My Journey</title>
      <link>https://example.com/journey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>mail@mlesniak.com (Dr. Michael Lesniak)</author>
      <guid>https://example.com/journey/</guid>
      <description>I’ve let my younger self down.
I started coding on a C64 and achieved a lot in the last thirty years — leading teams, designing systems, solving tough bugs, and earning promotions.
But I felt empty.
Even though my CV looked impressive, I didn&amp;rsquo;t feel connected to what I loved - getting my hands dirty and solving real business problems that make a difference for customers.
To bring back the spark and make my younger self proud again, I moved to freelancing.</description>
      <content:encoded><![CDATA[<p>I’ve let my younger self down.</p>
<p>I started coding on a C64 and achieved a lot in the last thirty years — leading teams, designing systems, solving tough bugs, and earning promotions.</p>
<p>But I felt empty.</p>
<p>Even though my CV looked impressive, I didn&rsquo;t feel connected to what I loved - getting my hands dirty and solving real business problems that make a difference for customers.</p>
<p>To bring back the spark and make my younger self proud again, I moved to freelancing.</p>
<p>I build impactful features — from understanding the goal, to architecture, implementation, and rollout.</p>
<p>The spark returned.</p>
<p>My younger self is proud again, though would have a lot to say about my lack of gaming skills.</p>
<p>I want my work to matter.</p>
<p>That’s why I focus on startups and small businesses.</p>
<p>They don’t need abstract consulting, they need to move fast.</p>
<p>They need someone who delivers immediate value.</p>
<p>That’s where I excel.</p>
<p>What’s in it for you?</p>
<p>I improve your architecture to handle 10x the data, build a time-critical feature to close a big deal, or fix a framework bug which blocks a critical security upgrade.</p>
<p>I don’t just offer advice.</p>
<p>I’m in the code with your team.</p>
<p>I build what helps you scale and succeed.</p>
<p>Yet, I’m not the right fit for every company.</p>
<p>Don’t reach out if you’re</p>
<ul>
<li>
<p>looking for consultants rather than doers.</p>
</li>
<li>
<p>not ready for rapid, hands-on problem-solving.</p>
</li>
<li>
<p>prefer slow processes over fast, effective execution.</p>
</li>
</ul>
<p>Ready for someone who doesn’t just write code but crafts solutions that resonate with your mission &hellip; and has a talent for confusing, but funny, metaphors?</p>
<p>Shoot me a <a href="mailto:mail@mlesniak.com">message</a>. I’ll respond in &lt;10ms.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Qualifications, Past Project and Education</title>
      <link>https://example.com/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>mail@mlesniak.com (Dr. Michael Lesniak)</author>
      <guid>https://example.com/resume/</guid>
      <description>Qualifications Expert Java, Kotlin, Spring Boot, Analytical thinking, Mentoring and coaching, Leadership, Software architecture, Distributed systems, Microservices, Implementation, Debugging, Docker, Cloud (AWS), REST, Terraform, Git, Requirements Engineering, JetBrains products, SQL, Code Reviews, SCRUM, Refactoring, REST, API Design
Professional Domain-Driven Design, Serverless, Project management, Testing, Linux, Go, MongoDB, Cassandra, Neo4J, Implementation and analysis of algorithms, Atlassian products (JIRA, Confluence)
Basic Haskell, React, JavaScript, TypeScript, Python, C#, .NET Core, gRPC, Angular, Pulumi</description>
      <content:encoded><![CDATA[<h4 id="qualifications">Qualifications</h4>
<h5 id="expert">Expert</h5>
<p>Java, Kotlin, Spring Boot, Analytical thinking, Mentoring and coaching, Leadership, Software architecture,
Distributed systems, Microservices, Implementation, Debugging, Docker, Cloud (AWS), REST, Terraform, Git, Requirements
Engineering, JetBrains products, SQL, Code Reviews, SCRUM, Refactoring, REST, API Design</p>
<h5 id="professional">Professional</h5>
<p>Domain-Driven Design, Serverless, Project management, Testing, Linux, Go, MongoDB, Cassandra, Neo4J,
Implementation and analysis of algorithms, Atlassian products (JIRA, Confluence)</p>
<h5 id="basic">Basic</h5>
<p>Haskell, React, JavaScript, TypeScript, Python, C#, .NET Core, gRPC, Angular, Pulumi</p>
<h4 id="languages">Languages</h4>
<ul>
<li>German: native speaker</li>
<li>English: professional proficiency</li>
</ul>
<h4 id="project-list">Project list</h4>
<h5 id="122024--senior-software-engineer">12/2024 | Senior Software Engineer</h5>
<p><a href="https://milia.io">Milia</a></p>
<ul>
<li>Improving and optimizing software architecture</li>
<li>Design, specification and implementation of new features</li>
<li>Bugfixing and troubleshooting</li>
<li>General platform improvements</li>
</ul>
<h5 id="022024----082024--senior-java-software-engineer">02/2024 &ndash; 08/2024 | Senior Java Software Engineer</h5>
<p><a href="https://www.micromerce.com">Micromerce</a></p>
<ul>
<li>Improved ticket processing time by connecting the ticket system to OpenAI API.</li>
<li>Enhanced AI responses by setting up and configuring a RAG-based system.</li>
<li>Reducing database costs in DynamoDB by over 30% through improvements of the company-specific persistence framework</li>
<li>Enabling teams to move faster by enabling JavaScript besides Groovy for an in-house scripting engine</li>
<li>Making solutions engineers more productive by developing a custom VSCode extension to support an internal configuration language with validation and auto-completion</li>
<li>Improving platform stability by analyzing and fixing SQS performance issues</li>
<li>Future-proofing the infrastructure as code setup by setting up CDK for AWS and migrating the existing code base from an unsupported legacy solution</li>
<li>Improving platform security by adding a custom-tailored brute-force prevention</li>
<li>Helping their teams to understand the tradeoffs of different architectural approaches</li>
</ul>
<p>Keywords: Java (17, 21), AWS, SQS, DynamoDB, Microservices, CDK, TypeScript</p>
<h5 id="012024---022024--consultant">01/2024 - 02/2024 | Consultant</h5>
<p><a href="https://www.linkedin.com/company/algominds/">AlgoMinds GmbH</a></p>
<ul>
<li>Implementation of a complete CI pipeline (including supporting systems such as build pools) from scratch via Infrastructure as Code on Azure</li>
</ul>
<p>Keywords: Infrastructure as Code, Pulumi, Microsoft Azure, C#, .NET Core 8, TypeScript</p>
<!-- #####  04/2021 – 11/2023 | Senior, Staff and Principal Engineer  -->
<h5 id="042021--112023--principal-engineer">04/2021 – 11/2023 | Principal Engineer</h5>
<p><a href="https://de.scalable.capital/en">Scalable Capital GmbH</a></p>
<ul>
<li>Planning, leading and implementation of a large-scale migration project (400k+ lines of code) from Spring Boot 2.3 to 3.1</li>
<li>Design and Proof of Concept implementations of refactoring approaches from a monolithic to a distributed service-oriented architecture</li>
<li>Definition and introduction of company-wide standards and best practices (Architectural Decision Records, Code Reviews, Service templates and many more)</li>
<li>Planning, design, coordination and implementation of business-critical product features</li>
<li>Offering consulting to CTOs and Heads of Engineering about company-wide decisions and architectural designs</li>
</ul>
<p>Keywords: Kotlin, Java, Go,  Python, Terraform, SQL and NoSQL, Jenkins, CI/CD, AWS (EC2, ECS, RDS, Aurora, Lambda, DynamoDB etc.), Serverless, Microservices	Distributed, fault-tolerant and scalable architecture, Large-scale refactoring</p>
<h5 id="102020---032021--platform-engineer">10/2020 - 03/2021 | Platform Engineer</h5>
<p><a href="https://www.airmap.com/">AirMap</a></p>
<ul>
<li>Design, implementation and maintenance of a country-wide used registry for drone operators</li>
<li>Improving software development processes</li>
<li>Extending and improving the underlying AirMap platform</li>
<li>Code reviews</li>
</ul>
<p>Keywords: Go, Python, Postgres, AWS, Kubernetes</p>
<h5 id="022020--102020--cto--software-architect">02/2020 – 10/2020 | CTO &amp; Software Architect</h5>
<p><a href="https://fino.ai">fino GmbH</a></p>
<ul>
<li>Managed and provided technical and disciplinary oversight to a team of more than twenty employees</li>
<li>Developed an API-first strategy encompassing software architecture, business processes, product strategy, and employee training</li>
<li>Analyzed and improved a microservice-based distributed architecture</li>
<li>Mentored and coached software developers, team leads, and product owners</li>
<li>Facilitated SCRUM processes and conducted training for development teams</li>
<li>Coordinated recruitment and selection of near- and off-shore freelancers and teams</li>
</ul>
<p>Keywords: Go, Java, Python, TypeScript, MongoDB, Elastic Stack, Sematext, Kubernetes, OTC (Open Telecom Cloud), CQRS</p>
<h5 id="112017--012020--software-architect-senior-software-engineer-scrum-master">11/2017 – 01/2020 | Software Architect, Senior Software Engineer, SCRUM Master</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Design and implementation of a worldwide identity and access management system</li>
<li>Close collaboration with technical and business-related stakeholders</li>
<li>Coaching of teams and individual engineers</li>
<li>Performing the SCRUM master role for multiple months in addition to regular duties</li>
</ul>
<p>Keywords: Java, Docker, Spring Boot, AWS Cloud, Elastic Stack, Neo4j, Cypher, Postgres, Camunda, Flowable, Apache Camel, React</p>
<h5 id="022017--112017--software-architect-senior-software-engineer">02/2017 – 11/2017 | Software Architect, Senior Software Engineer</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Design a technical concept and software architecture for a KPI management tool</li>
<li>Implementation of critical core system components</li>
<li>Delivering expert functional and technical consulting services to the client</li>
</ul>
<p>Keywords: Java, Spring Boot, Cassandra, CQL, Docker, Elastic Stack</p>
<h5 id="032017--122018--software-architect-and-data-scientist">03/2017 – 12/2018 | Software Architect and Data Scientist</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Conceptualization and proof-of-concept implementation of an analytics platform for enterprise-wide corporate data (&lsquo;Data Lake&rsquo;)</li>
<li>Delivering expert functional and technical consulting services to the client</li>
</ul>
<p>Keywords: Java, Scala, Python, Docker</p>
<h5 id="102016--112016--senior-software-engineer">10/2016 – 11/2016 | Senior Software Engineer</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Development of a configurable tool for pseudonymizing personal data in a Big Data context</li>
</ul>
<p>Keywords: Java, Spring Boot</p>
<h5 id="082016--092016--senior-software-engineer">08/2016 – 09/2016 | Senior Software Engineer</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Performance troubleshooting for a critical enterprise logistics application</li>
<li>Implementation of identified technical and architectural enhancements</li>
</ul>
<p>Keywords: Java, Spring Boot, SQL, JProfiler</p>
<h5 id="072016--052017--software-architect-and-data-scientist">07/2016 – 05/2017 | Software Architect and Data Scientist</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Development and conceptualization of an analytics platform for time series data</li>
<li>Implementation and visualization of early fault detection (Predictive Maintenance) using machine learning techniques</li>
</ul>
<p>Keywords: Scala, Spark with MLLib, Hadoop, Cloudera, R, Zeppelin</p>
<h5 id="112015--042016--senior-software-engineer">11/2015 – 04/2016 | Senior Software Engineer</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Conception and development of small applications based on SAP HCP</li>
<li>Consulting with business units on technical and subject matter inquiries</li>
</ul>
<p>Keywords: SAP Hana, Java</p>
<h5 id="092015--042016--senior-software-engineer-and-team-lead">09/2015 – 04/2016 | Senior Software Engineer and Team Lead</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Design and implementation of new features for an application in the pharmaceutical sector</li>
<li>Architecture planning for porting to SAP HCP</li>
<li>Training of the existing development team</li>
<li>Expansion and optimization of code quality measurements</li>
</ul>
<p>Keywords: Java, JavaEE, WildFly, Wicket, Sonar, Jenkins</p>
<h5 id="082015--062016--software-architect">08/2015 – 06/2016 | Software Architect</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Development of the technical Big Data architecture for the application of a BMBF-funded research project</li>
</ul>
<p>Keywords: Big Data, Architecture, Research</p>
<h5 id="032015--092015--solution-architect-and-development-lead">03/2015 – 09/2015 | Solution Architect and Development Lead</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Architectural advancement of a Hadoop-based reporting platform</li>
<li>Development leadership (coaching, code reviews, quality control)</li>
<li>Software development</li>
</ul>
<p>Keywords: Java, Spring Boot, Hadoop, Cloudera, Impala, Sonar, Jenkins</p>
<h5 id="032013--102014--co-software-architect-senior-software-engineer-and-quality-assurance-manager">03/2013 – 10/2014 | Co-Software Architect, Senior Software Engineer and Quality Assurance Manager</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Requirements engineering for a business customer-focused logistics application and creation of a comprehensive technical specification</li>
<li>Development of a fail-safe and highly scalable architecture</li>
<li>Implementation of central components</li>
</ul>
<p>Keywords: Java, Groovy, SQL, Spring Boot, Genome (inhouse), Wicket, Hibernate, JIRA, Sonar, Jenkins</p>
<h5 id="072012--022013--software-engineer">07/2012 – 02/2013 | Software Engineer</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Software development for generating sorting codes on package labels.</li>
</ul>
<p>Keywords: Java, SQL, Spring Boot, Genome (inhouse), Oracle DB, JIRA</p>
<h5 id="072012--042013--software-engineer">07/2012 – 04/2013 | Software Engineer</h5>
<p><a href="https://www.micromata.de">Micromata GmbH</a></p>
<ul>
<li>Software development for route planning and dispatch in a mission-critical, highly available, and scalable application</li>
<li>Implementation of an automatic deployment system</li>
</ul>
<p>Keywords: Java, Groovy, SQL, Spring Boot, Wicket, Oracle DB, JIRA
``</p>
<h5 id="2015--2019--lecturer-for-web-engineering-freelance">2015 – 2019 | Lecturer for Web-Engineering (Freelance)</h5>
<p><a href="https://www.uni-kassel.de">University of Kassel</a></p>
<ul>
<li>Planning and conducting the master&rsquo;s lecture &ldquo;Web Engineering&rdquo;</li>
<li>Topics: Modern web architectures, frontend and backend development, deployment on cloud platforms, software tooling</li>
<li>Content supervision of project groups</li>
<li>Examination feedback and grading</li>
</ul>
<h5 id="042008--042012--fixed-term-position-as-a-research-associate">04/2008 – 04/2012 | Fixed-term Position as a Research Associate</h5>
<p><a href="https://www.uni-kassel.de">University of Kassel</a></p>
<ul>
<li>Planning, execution, and analysis of research projects in functional programming languages and parallel programming</li>
<li>Publication of research results</li>
<li>Presentations at international conferences</li>
<li>Lecturing on functional programming languages and foundational courses</li>
<li>Supervision of student research assistants</li>
<li>Guidance of student project and thesis work</li>
</ul>
<h5 id="082007--122007--fixed-term-position-as-a-research-associate">08/2007 – 12/2007 | Fixed-term Position as a Research Associate</h5>
<p><a href="https://www.dcaiti.tu-berlin.de/">DCAITI / TU Berlin</a></p>
<ul>
<li>Planning and execution of research projects</li>
<li>Investigation and development of multimodal human-machine software architectures</li>
<li>Conceptualization of situation-based and adaptive learning mechanisms</li>
</ul>
<h4 id="certifications">Certifications</h4>
<ul>
<li><strong>09/2024</strong>  AWS Certified Solution Architect Associate</li>
<li><strong>11/2023</strong>  HashiCorp Certified: Terraform Associate (003)</li>
<li><strong>03/2021</strong>  AWS Certified Cloud Practitioner</li>
<li><strong>02/2019 – 04/2021</strong>  Training as a Systemic Coach (SG)
<ul>
<li>Supporting and guiding individuals and teams in developing solutions and overcoming conflicts and obstacles through systemic interventions for personal and professional challenges</li>
<li>Assisting with change processes for teams and organizations to enable smooth transitions and effective adaptation to new circumstances</li>
</ul>
</li>
<li><strong>10/2018</strong>  Certified Neo4J Professional</li>
<li><strong>03/2017</strong>  SCRUM Professional Scrum Master (ITEMO)</li>
<li><strong>11/2014</strong>  MapR Certified Hadoop Professional: Developer (MCHP:D)</li>
<li><strong>02/2013</strong>  Certified Professional for Requirements Engineering Foundation Level</li>
</ul>
<h4 id="education">Education</h4>
<h5 id="042008---042012--phd-in-computer-science">04/2008 - 04/2012 | Ph.D. in Computer Science</h5>
<p><a href="https://www.uni-kassel.de">University of Kassel</a></p>
<ul>
<li>Title: &ldquo;On the Benefits of Abstraction in Concurrent Haskell&rdquo;</li>
<li>Focused on advancing the field of functional programming and concurrency models.</li>
</ul>
<h5 id="102001---062007--diploma-in-computer-science-with-a-minor-in-mathematics">10/2001 - 06/2007 | Diploma in Computer Science with a minor in Mathematics</h5>
<p><a href="https://www.tu-clausthal.de/">Technical University of Clausthal</a></p>
<ul>
<li>Comparable to a Master&rsquo;s degree.</li>
<li>Comprehensive curriculum covering both theoretical and applied aspects of computer science and mathematics.</li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>
